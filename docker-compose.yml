version: '2.2'

services:
  db:
    image: liuuuk311acr.azurecr.io/postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # volumes:
    #   - db:/var/lib/postgresql/data
  app:
    build:
      context: .
      dockerfile: docker/py37.Dockerfile
    image: liuuuk311acr.azurecr.io/app
    restart: unless-stopped
    command: bash -c "
        python manage.py migrate
        && python manage.py runserver 0.0.0.0:8000"
    # volumes:
    #   - db:/code
    ports:
      - "80:8000"
    depends_on:
      - db
      - es
      - rabbit
      - redis

  rabbit:
    restart: unless-stopped
    image: liuuuk311acr.azurecr.io/rabbitmq

  redis:
    restart: unless-stopped
    image: liuuuk311acr.azurecr.io/redis

  worker:
    build:
      context: .
      dockerfile: docker/py37.Dockerfile
    image: liuuuk311acr.azurecr.io/app
    command: celery -A core worker -l info
    depends_on:
      - db
      - rabbit
      - redis

  es:
    build:
      context: .
      dockerfile: docker/es.Dockerfile
    image: liuuuk311acr.azurecr.io/es
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - esdata:/tmp/share/elasticsearch/data

# volumes:
#   esdata:
#     driver: azure_file
#     driver_opts:
#       share_name: fpvshare
#       storage_account_name: fpvstorage
#   db:
#     driver: azure_file
#     driver_opts:
#       share_name: fpvshare
#       storage_account_name: fpvstorage
