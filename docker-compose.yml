version: '3.9'

services:
  db:
    image: postgres:14
    volumes:
      - ./pg-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  app:
    build:
      context: .
      dockerfile: docker/py.Dockerfile
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000 --insecure
    environment:
        - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
        - TELEGRAM_BOT_API_KEY=${TELEGRAM_BOT_API_KEY}
    volumes:
        - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - es
      - rabbit
      - redis

  rabbit:
    restart: unless-stopped
    image: rabbitmq

  redis:
    restart: unless-stopped
    image: redis:3.2-alpine

  worker:
    build:
      context: .
      dockerfile: docker/py.Dockerfile
      shm_size: '2gb'
    shm_size: '2gb'
    command: celery -A core worker -l info
    environment:
        - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
        - TELEGRAM_BOT_API_KEY=${TELEGRAM_BOT_API_KEY}
    volumes:
        - .:/code
    depends_on:
      - db
      - rabbit
      - redis

  scheduler:
    build:
      context: .
      dockerfile: docker/py.Dockerfile
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
        - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
        - TELEGRAM_BOT_API_KEY=${TELEGRAM_BOT_API_KEY}
    volumes:
        - .:/code
    depends_on:
      - db
      - rabbit
      - redis

  es:
    build:
      context: .
      dockerfile: docker/es.Dockerfile
    ports:
      - "9200:9200"
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - data01:/tmp/share/elasticsearch/data

volumes:
  pg-data:
  data01:
    driver: local