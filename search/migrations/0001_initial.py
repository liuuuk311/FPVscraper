# Generated by Django 3.0.8 on 2020-07-24 15:14

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=256, verbose_name='The name of the category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=256, verbose_name='Name of the store')),
                ('website', models.URLField(verbose_name='URL of the store')),
                ('region', models.CharField(choices=[('USA', 'United States'), ('ITA', 'Italy'), ('CHN', 'China'), ('OTH', 'Other')], max_length=3, verbose_name='Region of the store')),
                ('last_check', models.DateTimeField(null=True, verbose_name='Last check')),
                ('is_scrapable', models.BooleanField(default=False, verbose_name='Is the store still compatible?')),
                ('search_url', models.URLField(verbose_name='The base url of the search page')),
                ('search_tag', models.CharField(max_length=64, verbose_name='The nearest html tag for each product item displayed in the result page')),
                ('search_class', models.CharField(max_length=64, verbose_name='The nearest css class for the search_tag')),
                ('search_link', models.CharField(max_length=64, verbose_name='The nearest css class from where to search the product page link')),
                ('search_next_page', models.CharField(max_length=64, null=True, verbose_name='The nearest css class from where to get the next page link')),
                ('product_name_class', models.CharField(max_length=64, verbose_name="The css class of the product's name")),
                ('product_name_tag', models.CharField(max_length=64, verbose_name="The html tag of the product's name")),
                ('product_price_class', models.CharField(max_length=64, verbose_name="The css class of the product's price")),
                ('product_price_tag', models.CharField(max_length=64, verbose_name="The html tag of the product's price")),
                ('product_image_class', models.CharField(max_length=64, null=True, verbose_name='The css class of the main image of the product')),
                ('product_image_tag', models.CharField(max_length=64, null=True, verbose_name='The html tag of the main image of the product')),
                ('product_thumb_class', models.CharField(max_length=64, null=True, verbose_name='The css class of the thumbnail images of the product')),
                ('product_thumb_tag', models.CharField(max_length=64, null=True, verbose_name='The html tag of the thumbnail images of the product')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
